
/////////////////////////////////////////////////////////////////////////////
//
// thread_cmutex.cpp - ::THREAD::CMutex class source
//
/////////////////////////////////////////////////////////////////////////////

#include "thread_cmutex.h"

namespace THREAD {

/////////////////////////////////////////////////////////////////////////////
CMutex::CMutex() {
} // CMutex


/////////////////////////////////////////////////////////////////////////////
CMutex::~CMutex() {
} // ~CMutex


/////////////////////////////////////////////////////////////////////////////
CMutex::CMutex(const CMutex & tMutex) :
  ::THREAD::CObject(tMutex),
  ::BASE::CMutex(tMutex) {
} // CMutex


/////////////////////////////////////////////////////////////////////////////
CMutex & CMutex::operator=(const CMutex & tMutex) {
  ::THREAD::CObject::operator=(tMutex);
  ::BASE::CMutex::operator=(tMutex);
  return (* this);
} // operator=


/////////////////////////////////////////////////////////////////////////////
void CMutex::Acquire(::BASE::CObject::operations operation, ::BASE::CObject::synchronizations synchronization) {
  ::BASE::CMutex::Acquire();
} // Acquire


/////////////////////////////////////////////////////////////////////////////
void CMutex::Release() {
  ::BASE::CMutex::Release();
} // Release

} // namespace THREAD
